// Reusable mixins

// Import font face
@mixin declare-font-face($font-family, $font-filename, $font-weight: normal, $font-style: normal, $font-stretch: normal) {
  @font-face {
    font-family: #{$font-family};
    src: url("../../fonts/#{$font-filename}.eot");
    src: url("../../fonts/#{$font-filename}.eot?#iefix") format("embedded-opentype"),
         url("../../fonts/#{$font-filename}.woff") format("woff"),
         url("../../fonts/#{$font-filename}.woff2") format("woff2"),
         url("../../fonts/#{$font-filename}.svg##{$font-family}") format("svg");
    font-weight: $font-weight;
    font-style: $font-style;
    font-stretch: $font-stretch;
  }
}

// Border Radius
@mixin border-radius($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  // stops bg color from leaking outside the border:
}

// Clearfix using :after pseudoselector
@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Box Sizing
@mixin box-sizing($box-sizing: border-box) {
  -webkit-box-sizing: $box-sizing;
  -moz-box-sizing: $box-sizing;
  -o-box-sizing: $box-sizing;
  box-sizing: $box-sizing;
}

// Box shadow
@mixin box-shadow($x, $y, $blur, $color, $inset:"") {
  -webkit-box-shadow: $x $y $blur $color #{$inset};
  -moz-box-shadow:    $x $y $blur $color #{$inset};
  box-shadow:         $x $y $blur $color #{$inset};
}

@mixin filter-shadow($offX: 2, $offY: 2, $blur: 2, $rgba: rgba(0, 0, 0, 0.3), $hex: #B2B2B2) {
  -ms-filter    : "progid:DXImageTransform.Microsoft.Dropshadow(OffX=" + $offX + ", OffY=" + $offY + ", Color='" + $hex + "')";
  filter        : "progid:DXImageTransform.Microsoft.Dropshadow(OffX=" + $offX + ", OffY=" + $offY + ", Color='" + $hex + "')";
  -webkit-filter: drop-shadow(#{$offX}px #{$offY}px #{$blur}px $rgba);
  filter        : drop-shadow(#{$offX}px #{$offY}px #{$blur}px $rgba);
}

// Project Square Gradient
@mixin project-square-gradient($from-color, $to-color) {
  background: $to-color;
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from-color), to($to-color));
  background: -webkit-linear-gradient(top, $from-color, $to-color);
  background:    -moz-linear-gradient(top, $from-color, $to-color);
  background:     -ms-linear-gradient(top, $from-color, $to-color);
  background:      -o-linear-gradient(top, $from-color, $to-color);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$from-color}', EndColorStr='#{$to-color}')";
}

// Transitions
@mixin transition($transitions...) {
  -webkit-transition: $transitions;
     -moz-transition: $transitions;
      -ms-transition: $transitions;
       -o-transition: $transitions;
          transition: $transitions;
}
